name: CI/CD  

on:  
  push:  
    branches:  
      - main  # Replace 'main' with your primary branch name  
  pull_request:  
    branches:  
      - main  # Replace 'main' with your primary branch name  

jobs:  
  build-and-test:  
    runs-on: ubuntu-latest  
    steps:  
    - name: Checkout repository  
      uses: actions/checkout@v2  

    - name: Set up Docker Buildx  
      uses: docker/setup-buildx-action@v1  

    - name: Cache Docker layers  
      uses: actions/cache@v2  
      with:  
        path: /tmp/.buildx-cache  
        key: ${{ runner.os }}-buildx-${{ github.sha }}  
        restore-keys: |  
          ${{ runner.os }}-buildx-  

    - name: Build Docker image  
      run: docker-compose build  

    - name: Docker Compose up  
      run: docker-compose up -d  

    # Add your test commands here  
    - name: Run tests  
      run: |  
        # Here you would add the commands to execute your tests  
        # For example:  
        docker-compose exec docker-react-c npm test  
        echo "Running tests..."  

    - name: Docker Compose down  
      run: docker-compose down

  Deploy:  
    needs: build-and-test  # This ensures that deploy job runs only if build job succeeds  
    name: deploy  
    runs-on: ubuntu-latest  
    steps:  
      - uses: actions/checkout@v2  
      - name: Connect  
        uses: appleboy/ssh-action@master  
        with:  
          username: ${{ secrets.USERNAME }}  
          password: ${{ secrets.PASSWORD }}  
          host: ${{ secrets.HOST }}  
          port: ${{ secrets.PORT }}  
          script: |  
            cd ${{ secrets.PATH }}  
            docker compose stop  
            git pull  
            docker compose restart
